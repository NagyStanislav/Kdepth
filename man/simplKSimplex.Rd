% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KDepth.R
\name{simplKSimplex}
\alias{simplKSimplex}
\title{Simplified \code{K}-simplex depth for bivariate data}
\usage{
simplKSimplex(X, K = 2, method = c("Cpp", "naive0", "naive1"), echo = FALSE)
}
\arguments{
\item{X}{The bivariate dataset represented as a numerical matrix
with two columns and \code{n} rows. The rows of \code{X} are
typically the residuals.}

\item{K}{Positive integer 1 or 2, parameter of the depth. If
\code{K} is 1, only the simplified 1-simplex depth is computed. If \code{K}
is 2, both simplified 1-simplex depth and simplified 2-simplex depth are
computed.}

\item{method}{String with the method used to compute the depth. Possible
values are \code{"Cpp"} for the fast C++ implementation, \code{"naive"}
for a slower R implementation of the same algorithm,
or \code{"naive0"} for the simplest
implementation of a loop via \code{depth.simplicial} from package
\code{ddalpha}. By default set to \code{"Cpp"}. Use \code{"Cpp"}
in all situations, the naive regime is only for checking and comparison.}

\item{echo}{Logical indicator whether the combinations of triples
of consecutive indices that result in triangles containing the origin
should be given. By default set to \code{FALSE}.}
}
\value{
A vector of length \code{2}. In the first element we have
the relative number of consecutive triangles (\code{K=1}) formed from
the rows of  \code{X} that contain the origin, and in the second
element we have the relative number of consecutive pairs of triangles
(\code{K=2}) that both contain the origin. Both numbers lie between
0 and 1.
}
\description{
C++ and R implementations of the algorithm for
the computation of the simplified \code{K}-simplex depth for
two-dimensional data (residuals). The C++ implementation
is the fastest one that should be used in practice; the complexity
of both algorithms is O(n). For comparison,
also two versions of (slower) naive R versions are provided.
}
\examples{
n = 500
X = matrix(rnorm(2*n),ncol=2)
K = 2
simplKSimplex(X,K)
}
\seealso{
\link{fullKSimplex} for a C++ implementation of the full
version of the 2-simplex depth, and \link{KSimplex} for a wrapper
function that can call both the full version of the depth
(\link{fullKSimplex}), and the simplified version of the depth
(\link{simplKSimplex}).
}
