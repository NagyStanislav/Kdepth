// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// altern_Craw
NumericVector altern_Craw(NumericVector x, int k, NumericVector i0, NumericVector i1);
RcppExport SEXP _SignDepth_altern_Craw(SEXP xSEXP, SEXP kSEXP, SEXP i0SEXP, SEXP i1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i0(i0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i1(i1SEXP);
    rcpp_result_gen = Rcpp::wrap(altern_Craw(x, k, i0, i1));
    return rcpp_result_gen;
END_RCPP
}
// altern_Craw2
NumericMatrix altern_Craw2(NumericVector x, int k);
RcppExport SEXP _SignDepth_altern_Craw2(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(altern_Craw2(x, k));
    return rcpp_result_gen;
END_RCPP
}
// compKdepth
double compKdepth(NumericVector x, int K);
RcppExport SEXP _SignDepth_compKdepth(SEXP xSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(compKdepth(x, K));
    return rcpp_result_gen;
END_RCPP
}
// kSD_Craw2
NumericVector kSD_Craw2(NumericVector ord, NumericVector sgn, int k, bool echo);
RcppExport SEXP _SignDepth_kSD_Craw2(SEXP ordSEXP, SEXP sgnSEXP, SEXP kSEXP, SEXP echoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sgn(sgnSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< bool >::type echo(echoSEXP);
    rcpp_result_gen = Rcpp::wrap(kSD_Craw2(ord, sgn, k, echo));
    return rcpp_result_gen;
END_RCPP
}
// triangle
bool triangle(double si, double sj, double sk, double ri, double rj, double rk);
RcppExport SEXP _SignDepth_triangle(SEXP siSEXP, SEXP sjSEXP, SEXP skSEXP, SEXP riSEXP, SEXP rjSEXP, SEXP rkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type si(siSEXP);
    Rcpp::traits::input_parameter< double >::type sj(sjSEXP);
    Rcpp::traits::input_parameter< double >::type sk(skSEXP);
    Rcpp::traits::input_parameter< double >::type ri(riSEXP);
    Rcpp::traits::input_parameter< double >::type rj(rjSEXP);
    Rcpp::traits::input_parameter< double >::type rk(rkSEXP);
    rcpp_result_gen = Rcpp::wrap(triangle(si, sj, sk, ri, rj, rk));
    return rcpp_result_gen;
END_RCPP
}
// kSD_Cfull2
double kSD_Cfull2(NumericVector x, NumericVector rnk);
RcppExport SEXP _SignDepth_kSD_Cfull2(SEXP xSEXP, SEXP rnkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rnk(rnkSEXP);
    rcpp_result_gen = Rcpp::wrap(kSD_Cfull2(x, rnk));
    return rcpp_result_gen;
END_RCPP
}
// testtriangle
bool testtriangle(double ri, double rj, double rk, double rl, int tp);
RcppExport SEXP _SignDepth_testtriangle(SEXP riSEXP, SEXP rjSEXP, SEXP rkSEXP, SEXP rlSEXP, SEXP tpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type ri(riSEXP);
    Rcpp::traits::input_parameter< double >::type rj(rjSEXP);
    Rcpp::traits::input_parameter< double >::type rk(rkSEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< int >::type tp(tpSEXP);
    rcpp_result_gen = Rcpp::wrap(testtriangle(ri, rj, rk, rl, tp));
    return rcpp_result_gen;
END_RCPP
}
// kSD_Cfull
double kSD_Cfull(NumericVector x, NumericVector rnk);
RcppExport SEXP _SignDepth_kSD_Cfull(SEXP xSEXP, SEXP rnkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rnk(rnkSEXP);
    rcpp_result_gen = Rcpp::wrap(kSD_Cfull(x, rnk));
    return rcpp_result_gen;
END_RCPP
}
// C123
bool C123(double a, double b, double c);
RcppExport SEXP _SignDepth_C123(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(C123(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// C132
bool C132(double a, double b, double c);
RcppExport SEXP _SignDepth_C132(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(C132(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// C312
bool C312(double a, double b, double c);
RcppExport SEXP _SignDepth_C312(SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(C312(a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// kSD_Cfull4
NumericVector kSD_Cfull4(NumericVector s, NumericVector r);
RcppExport SEXP _SignDepth_kSD_Cfull4(SEXP sSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(kSD_Cfull4(s, r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SignDepth_altern_Craw", (DL_FUNC) &_SignDepth_altern_Craw, 4},
    {"_SignDepth_altern_Craw2", (DL_FUNC) &_SignDepth_altern_Craw2, 2},
    {"_SignDepth_compKdepth", (DL_FUNC) &_SignDepth_compKdepth, 2},
    {"_SignDepth_kSD_Craw2", (DL_FUNC) &_SignDepth_kSD_Craw2, 4},
    {"_SignDepth_triangle", (DL_FUNC) &_SignDepth_triangle, 6},
    {"_SignDepth_kSD_Cfull2", (DL_FUNC) &_SignDepth_kSD_Cfull2, 2},
    {"_SignDepth_testtriangle", (DL_FUNC) &_SignDepth_testtriangle, 5},
    {"_SignDepth_kSD_Cfull", (DL_FUNC) &_SignDepth_kSD_Cfull, 2},
    {"_SignDepth_C123", (DL_FUNC) &_SignDepth_C123, 3},
    {"_SignDepth_C132", (DL_FUNC) &_SignDepth_C132, 3},
    {"_SignDepth_C312", (DL_FUNC) &_SignDepth_C312, 3},
    {"_SignDepth_kSD_Cfull4", (DL_FUNC) &_SignDepth_kSD_Cfull4, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SignDepth(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
